{"version":3,"sources":["components/Teapot/index.jsx","components/Slider/index.jsx","components/DeleteButton/index.jsx","components/EditableTable/index.jsx","reducers/teaTableReducer.js","components/TeaSelect/index.jsx","components/AddButton/index.jsx","utils/localStorageUtils.js","App.js","reportWebVitals.js","index.js"],"names":["Wrapper","styled","div","TeapotIcon","TeapotWater","amount","max","ScaleWrapper","ScaleText","Teapot","parseInt","SliderInput","input","Slider","min","step","value","setValue","type","onChange","e","target","Circle","Mark","DeleteButton","remainProps","StyledTable","table","TableHeader","th","align","TableHeaderRow","tr","StyledTd","td","DeleteTd","StyledInput","EditableTable","data","onDelete","dispatch","useDispatch","columns","map","column","label","id","sort","a","b","row","rowId","columnId","targetRowData","find","payload","onClick","initialState","tableData","teaTableReducer","state","action","newTableData","filter","newDataId","Math","isFinite","waterAmount","teaLeafId","targetTableData","lastWaterAmount","StyledSelect","select","TeaSelect","teaList","leafName","leafAmount","tea","AddButton","LOCALSTORAGE_KEY","Root","TeapotWrapper","TableWrapper","StyledAddButton","AmountWrapper","TeaLeafAmount","WaterAmount","Page","useState","setWaterAmount","setTeaLeafId","teaLeafAmount","setTeaLeafAmount","useSelector","useEffect","targetTeaLeaf","calcTeaLeafAmount","length","localStorage","setItem","JSON","stringify","isNaN","getItem","parse","readFromLocalStorage","v","round","App","store","createStore","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAEMA,EAAUC,IAAOC,IAAV,uFAMPC,EAAaF,IAAOC,IAAV,0KASVE,EAAcH,IAAOC,IAAV,0IAIL,qBAAEG,OAAF,EAAUC,IAAsB,OAItCC,EAAeN,IAAOC,IAAV,kJAQZM,EAAYP,IAAOC,IAAV,kHA2BAO,EApBA,SAAC,GAGT,IAFLH,EAEI,EAFJA,IACAD,EACI,EADJA,OAEA,OACE,eAACL,EAAD,WACE,cAACG,EAAD,UACE,cAACC,EAAD,CAAaE,IAAKI,SAASJ,GAAMD,OAAQK,SAASL,OAEpD,eAACE,EAAD,WACI,eAACC,EAAD,eAAaF,GAAK,OAClB,eAACE,EAAD,iBAAeF,GAAK,KAAK,EAAE,KAC3B,eAACE,EAAD,iBAAeF,GAAK,KAAK,KACzB,eAACE,EAAD,iBAAeF,GAAK,KAAK,EAAE,KAC3B,cAACE,EAAD,wBCpDJR,EAAUC,IAAOC,IAAV,qEAKPS,EAAcV,IAAOW,MAAV,0DA4BFC,EAxBA,SAAC,GAMT,IAAD,IALJC,WAKI,MALE,EAKF,MAJJR,WAII,MAJE,IAIF,MAHJS,YAGI,MAHG,GAGH,EAFJC,EAEI,EAFJA,MAEI,IADJC,gBACI,MADO,kBAAM,MACb,EAIJ,OACE,cAAC,EAAD,UACE,cAACN,EAAD,CACEO,KAAK,QACLJ,IAAKA,EACLR,IAAKA,GAAK,IACVU,MAAOA,EACPD,KAAMA,EACNI,SAXW,SAACC,GAChBH,EAASG,EAAEC,OAAOL,a,8BCjBhBM,EAASrB,IAAOC,IAAV,gPAgBNqB,EAAOtB,IAAOC,IAAV,gDAYKsB,EARM,SAAC,GAAsB,IAAlBC,EAAiB,oBACzC,OACE,cAACH,EAAD,2BAAYG,GAAZ,aACE,cAACF,EAAD,+BCrBAG,EAAczB,IAAO0B,MAAV,gFAKXC,EAAc3B,IAAO4B,GAAV,oEACD,qBAAEC,OAAqB,WAIjCC,GAAiB9B,IAAO+B,GAAV,oDAIdC,GAAWhC,IAAOiC,GAAV,mFAKRC,GAAWlC,IAAOiC,GAAV,0FAKRE,GAAcnC,IAAOW,MAAV,iFAED,qBAAEkB,OAAqB,WAqExBO,GAjEO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACvBC,EAAWC,cAoBjB,OAAKH,GAASA,EAAKI,QAIjB,eAAChB,EAAD,WACE,gCACE,eAACK,GAAD,WACGO,EAAKI,QAAQC,KAAI,SAACC,GAAD,OAChB,cAAChB,EAAD,CAA6BE,MAAOc,EAAOd,MAA3C,SAAmDc,EAAOC,OAAxCD,EAAOE,OAE3B,4BAGJ,gCACGR,EAAKA,KAAKS,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,GAAKG,EAAEH,MAAIH,KAAI,SAACO,GAAD,OACzC,+BACGZ,EAAKI,QAAQC,KAAI,SAACC,GAAD,OAChB,cAACX,GAAD,CAEEH,MAAOc,EAAOd,MAFhB,SAIE,cAACM,GAAD,CACEpB,MAAOkC,EAAIN,EAAOE,IAClBhB,MAAOc,EAAOd,MACdZ,KAAM0B,EAAO1B,MAAQ,OACrBJ,IAAK,EACLK,SAAU,SAACC,GAAD,OA5CT,SAAC,GAIX,IAHL+B,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACApC,EACI,EADJA,MAEMqC,EAAgBf,EAAKA,KAAKgB,MAAK,qBAAER,KAAeK,KACtDX,EAAS,CACPtB,KAAM,cACNqC,QAAS,CACPjB,KAAK,2BACAe,GADD,gBAEFP,GAAIK,GACHC,EAAWpC,OAgCaG,CAAS,CACxBgC,MAAOD,EAAIJ,GACXM,SAAUR,EAAOE,GACjB9B,MAAOI,EAAEC,OAAOL,YAXf4B,EAAOE,OAgBhB,cAACX,GAAD,UACE,cAAC,EAAD,CAAcqB,QAAS,kBAAMjB,EAASW,EAAIJ,WApBrCI,EAAIJ,YAdZ,M,QCxDLW,GAAe,CACnBC,UAAW,CACThB,QAAS,GACTJ,KAAM,KAoFKqB,GAhFS,WAAmC,IAAlCC,EAAiC,uDAAzBH,GAAcI,EAAW,uCACxD,OAAQA,EAAO3C,MACb,IAAK,OACH,OAAO,2BACF0C,GADL,IAEEF,UAAU,eACLG,EAAON,WAIhB,IAAK,cACH,IAAQjB,EAASuB,EAAON,QAAhBjB,KACFwB,EAAeF,EAAMF,UAAUpB,KAAKyB,QAAO,qBAAGjB,KAAgBR,EAAKQ,MACzE,OAAO,2BACFc,GADL,IAEEF,UAAW,CACThB,QAASkB,EAAMF,UAAUhB,QACzBJ,KAAK,GAAD,oBACCwB,GADD,CAEFxB,OAKR,IAAK,WACH,IAAQA,EAASuB,EAAON,QAAhBjB,KACJ0B,EAAYC,KAAK3D,IAAL,MAAA2D,KAAI,aAAQL,EAAMF,UAAUpB,KAAKK,KAAI,qBAAGG,QAAgB,EAIxE,OAHKoB,SAASF,KACZA,EAAY,GAEP,2BACFJ,GADL,IAEEF,UAAU,2BACLE,EAAMF,WADF,IAEPpB,KAAK,GAAD,oBACCsB,EAAMF,UAAUpB,MADjB,4BAGGA,GAHH,IAIAQ,GAAIkB,UAMd,IAAK,cACH,IAAQb,EAAUU,EAAON,QAAjBJ,MACFW,EAAeF,EAAMF,UAAUpB,KAAKyB,QAAO,qBAAGjB,KAAgBK,KACpE,OAAO,2BACFS,GADL,IAEEF,UAAW,CACThB,QAASkB,EAAMF,UAAUhB,QACzBJ,KAAK,aACAwB,MAKX,IAAK,2BACH,MAAmCD,EAAON,QAAlCY,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,UACfC,EAAkBT,EAAMF,UAAUpB,KAAKgB,MAAK,qBAAGR,IAAesB,KAC9DN,EAAeF,EAAMF,UAAUpB,KAAKyB,QAAO,qBAAGjB,IAAesB,KACnE,OAAO,2BACFR,GADL,IAEEF,UAAW,CACThB,QAASkB,EAAMF,UAAUhB,QACzBJ,KAAK,GAAD,oBACCwB,GADD,4BAGGO,GAHH,IAIAC,gBAAiBH,SAM3B,QACE,OAAOP,ICjFPW,GAAetE,IAAOuE,OAAV,kDAmBHC,GAfG,SAAC,GAGZ,IAFLC,EAEI,EAFJA,QACAvD,EACI,EADJA,SAEA,OACE,cAACoD,GAAD,CAAcpD,SAAUA,EAAxB,SACGuD,EAAQX,QAAO,SAACb,GACf,OAAOA,EAAIyB,UAAYzB,EAAI0B,YAAc1B,EAAIiB,eAC5CxB,KAAI,SAACkC,GACN,OAAO,wBAAqB7D,MAAO6D,EAAI/B,GAAhC,SAAqC+B,EAAIF,UAA5BE,EAAI/B,UCb1BxB,GAASrB,IAAOC,IAAV,4SAiBNqB,GAAOtB,IAAOC,IAAV,gDAcK4E,GAVG,SAAC,GAEZ,IADFrD,EACC,oBACJ,OACE,cAAC,GAAD,2BAAYA,GAAZ,aACE,cAAC,GAAD,yBC5BAsD,GAAmB,kBCcnBC,GAAO/E,IAAOC,IAAV,iDAIJ+E,GAAgBhF,IAAOC,IAAV,kEAKbgF,GAAejF,IAAOC,IAAV,iDAIZiF,GAAkBlF,YAAO6E,GAAP7E,CAAH,uDAIfmF,GAAgBnF,IAAOC,IAAV,6HAObmF,GAAgBpF,IAAOC,IAAV,4FAMboF,GAAcrF,IAAOC,IAAV,qGAeXqF,GAAO,WACX,IAEA,EAAsCC,mBAAS,IAA/C,mBAAOrB,EAAP,KAAoBsB,EAApB,KACA,EAAkCD,mBAAS,MAA3C,mBAAOpB,EAAP,KAAkBsB,EAAlB,KACA,EAA0CF,mBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEQlC,EAAcmC,aAAY,SAACjC,GAAD,OAAWA,KAArCF,UAEFgB,EAAUhB,EAAUpB,KAAKS,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEF,GAAKG,EAAEH,MAEjDN,EAAWC,cA2EjB,OA/CAqD,qBAAU,WACRF,EA3BwB,WACxB,IAAMG,EAAgBrC,EAAUpB,KAAKgB,MAAK,qBAAGR,IAAesB,KAC5D,OAAK2B,EAGGA,EAAcnB,WAAamB,EAAc5B,YAAeA,EAFvD,EAwBQ6B,MAChB,CAAC7B,EAAaC,EAAWV,IAE5BoC,qBAAU,WD/FuB,IAACxD,ECgG5BoC,EAAQuB,SAAWvB,EAAQpB,MAAK,qBAAER,IAAcsB,KAClDsB,EAAahB,EAAQ,GAAG5B,IAEnB4B,EAAQuB,QACbP,EAAa,MAEXhC,GAAaA,EAAUpB,KAAK2D,SDtGA3D,ECuGVoB,EDtGxBwC,aAAaC,QAAQpB,GAAkBqB,KAAKC,UAAU/D,OCwGnD,CAACoB,IAEJoC,qBAAU,WACJ3B,IAAgBmC,MAAMlC,IACxB5B,EAAS,CACPtB,KAAM,2BACNqC,QAAS,CAAEY,cAAaC,iBAG3B,CAACD,IAEJ2B,qBAAU,WACR,IAAMzE,EAASqC,EAAUpB,KAAKgB,MAAK,qBAAER,IAAcsB,KAC/C/C,GAAUA,EAAOiD,iBACnBmB,EAAepE,EAAOiD,mBAEvB,CAACF,IAEJ0B,qBAAU,WACR,IAAMxD,EDjI0B,WAClC,IAAMA,EAAO4D,aAAaK,QAAQxB,IAClC,OAAOqB,KAAKI,MAAMlE,GC+HHmE,GACbjE,EAAS,CACPtB,KAAM,OACNqC,QAAS,CACPb,QAAS,CACP,CAAEI,GAAI,WAAYD,MAAO,eAAMf,MAAO,UACtC,CAAEgB,GAAI,aAAcD,MAAO,+BAAYf,MAAO,QAASZ,KAAM,UAC7D,CAAE4B,GAAI,cAAeD,MAAO,0BAAYf,MAAO,QAASZ,KAAM,WAEhEoB,KAAMA,EAAOA,EAAKA,KAAO,QAG5B,IAGD,eAAC0C,GAAD,WACE,cAAC,GAAD,CAAWN,QAASA,EAASvD,SAAU,SAACC,GAAD,OAAOsE,EAAatE,EAAEC,OAAOL,UACpE,eAACiE,GAAD,WACE,cAAC,EAAD,CAAQ3E,IAzFF,IAyFYD,OAAQ8D,IAC1B,cAAC,EAAD,CAAQrD,IAzFF,EAyFYR,IA1FZ,IA0FsBU,MAAOmD,EAAalD,SAAU,SAACyF,GAAD,OAAOjB,EAAeiB,MAChF,eAACtB,GAAD,WACE,eAACC,GAAD,WAAgBiB,MAAMX,KAAmBA,EAAgB,MAAQ1B,KAAK0C,MAAMhB,GAA5E,OACA,eAACL,GAAD,WAAcnB,EAAd,cAGJ,eAACe,GAAD,WACE,cAACC,GAAD,CAAiB3B,QA7EH,WAClBhB,EAAS,CACPtB,KAAM,WACNqC,QAAS,CACPoB,SAAU,GACVC,WAAY,EACZT,YAAa,MAuEb,eACA,cAAC,GAAD,CAAe7B,KAAMoB,EAAWnB,SAnElB,SAACY,GACnBX,EAAS,CACPtB,KAAM,cACNqC,QAAS,CAACJ,qBAsEDyD,GAlHH,WACV,IAAMC,EAAQC,YAAYnD,IAC1B,OACE,cAAC,IAAD,CAAUkD,MAAOA,EAAjB,SACE,cAAC,GAAD,OC1CSE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.5ee84125.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  height: 30vw;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst TeapotIcon = styled.div`\r\n  width: 20vw;\r\n  height: 100%;\r\n  border-radius: 5px 5px 20px 20px;\r\n  border: 4px solid black;\r\n  display: flex;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst TeapotWater = styled.div`\r\n  width: 100%;\r\n  background: #70f1ff;\r\n  border-radius: 1px 1px 15px 15px;\r\n  height: ${({amount, max}) => (amount/max)*100}%;\r\n  z-index: -1;\r\n`;\r\n\r\nconst ScaleWrapper = styled.div`\r\n  height: 115%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: end;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ScaleText = styled.div`\r\n  position: relative;\r\n  left: -9px;\r\n  font-weight: bold;\r\n  white-space: pre-wrap;\r\n`;\r\n\r\nconst Teapot = ({\r\n  max,\r\n  amount,\r\n}) => {\r\n  return (\r\n    <Wrapper>\r\n      <TeapotIcon>\r\n        <TeapotWater max={parseInt(max)} amount={parseInt(amount)}/>\r\n      </TeapotIcon>\r\n      <ScaleWrapper>\r\n          <ScaleText> {max||100}</ScaleText>\r\n          <ScaleText>- {(max||100)/4*3}</ScaleText>\r\n          <ScaleText>- {(max||100)/2}</ScaleText>\r\n          <ScaleText>- {(max||100)/4*1}</ScaleText>\r\n          <ScaleText> 0</ScaleText>\r\n        </ScaleWrapper>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Teapot;","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin-left: -50px;\r\n`;\r\n\r\nconst SliderInput = styled.input`\r\n  transform: rotate(-90deg);\r\n`;\r\n\r\nconst Slider = ({\r\n  min = 0,\r\n  max = 100,\r\n  step = 10,\r\n  value,\r\n  setValue = () => null,\r\n}) => {\r\n  const onChange = (e) => {\r\n    setValue(e.target.value);\r\n  }\r\n  return (\r\n    <Wrapper>\r\n      <SliderInput\r\n        type=\"range\"\r\n        min={min}\r\n        max={max||100}\r\n        value={value}\r\n        step={step}\r\n        onChange={onChange}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Slider;","import styled from \"styled-components\";\r\n\r\nconst Circle = styled.div`\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 100px;\r\n  :hover {\r\n    background: #ff0f0f;\r\n    div {\r\n      color: white;\r\n    }\r\n  }\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n`;\r\n\r\nconst Mark = styled.div`\r\n  font-size: 20px;\r\n`;\r\n\r\nconst DeleteButton = ({...remainProps}) => {\r\n  return (\r\n    <Circle {...remainProps}>\r\n      <Mark>🗑</Mark>\r\n    </Circle>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;","import { useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport DeleteButton from \"../DeleteButton\";\r\n\r\nconst StyledTable = styled.table`\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n`;\r\n\r\nconst TableHeader = styled.th`\r\n  text-align: ${({align}) => (align || 'start')};\r\n  padding: 0 16px;\r\n`;\r\n\r\nconst TableHeaderRow = styled.tr`\r\n  background: #a0a0a0;\r\n`;\r\n\r\nconst StyledTd = styled.td`\r\n  border-bottom 1px solid #a0a0a0;\r\n  padding: 0 8px;\r\n`;\r\n\r\nconst DeleteTd = styled.td`\r\n  border-bottom 1px solid #a0a0a0;\r\n  padding: 0 8px 0 16px;\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  border: none;\r\n  text-align: ${({align}) => (align || 'start')};\r\n  width: 100%;\r\n`;\r\n\r\nconst EditableTable = ({ data, onDelete }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = ({\r\n    rowId,\r\n    columnId,\r\n    value,\r\n  }) => {\r\n    const targetRowData = data.data.find(({id}) => id === rowId);\r\n    dispatch({\r\n      type: 'UPDATE_DATA',\r\n      payload: {\r\n        data: {\r\n          ...targetRowData,\r\n          id: rowId,\r\n          [columnId]: value,\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  if (!data || !data.columns) {\r\n    return null;\r\n  }\r\n  return (\r\n    <StyledTable>\r\n      <thead>\r\n        <TableHeaderRow>\r\n          {data.columns.map((column) => (\r\n            <TableHeader key={column.id} align={column.align}>{column.label}</TableHeader>\r\n          ))}\r\n          <th></th>\r\n        </TableHeaderRow>\r\n      </thead>\r\n      <tbody>\r\n        {data.data.sort((a, b) => a.id - b.id).map((row) => (\r\n          <tr key={row.id}>\r\n            {data.columns.map((column) => (\r\n              <StyledTd\r\n                key={column.id}\r\n                align={column.align}\r\n              >\r\n                <StyledInput\r\n                  value={row[column.id]}\r\n                  align={column.align}\r\n                  type={column.type || 'text'}\r\n                  min={1}\r\n                  onChange={(e) => onChange({\r\n                    rowId: row.id,\r\n                    columnId: column.id,\r\n                    value: e.target.value,\r\n                  })}\r\n                />\r\n              </StyledTd>\r\n            ))}\r\n            <DeleteTd>\r\n              <DeleteButton onClick={() => onDelete(row.id)} />\r\n            </DeleteTd>\r\n          </tr> \r\n        ))}\r\n      </tbody>\r\n    </StyledTable>\r\n  );\r\n};\r\n\r\nexport default EditableTable;","const initialState = {\r\n  tableData: {\r\n    columns: [],\r\n    data: [],\r\n  }\r\n};\r\n\r\nconst teaTableReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'INIT': {\r\n      return {\r\n        ...state,\r\n        tableData: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n    }\r\n    case 'UPDATE_DATA': {\r\n      const { data } = action.payload;\r\n      const newTableData = state.tableData.data.filter(({ id }) => id !== data.id);\r\n      return {\r\n        ...state,\r\n        tableData: {\r\n          columns: state.tableData.columns,\r\n          data: [\r\n            ...newTableData,\r\n            data,\r\n          ],\r\n        },\r\n      };\r\n    }\r\n    case 'ADD_DATA': {\r\n      const { data } = action.payload;\r\n      let newDataId = Math.max(...state.tableData.data.map(({ id }) => id)) + 1;\r\n      if (!isFinite(newDataId)) {\r\n        newDataId = 0;\r\n      }\r\n      return {\r\n        ...state,\r\n        tableData: {\r\n          ...state.tableData,\r\n          data: [\r\n            ...state.tableData.data,\r\n            {\r\n              ...data,\r\n              id: newDataId,\r\n            },\r\n          ],\r\n        }\r\n      }\r\n    };\r\n    case 'DELETE_DATA': {\r\n      const { rowId } = action.payload;\r\n      const newTableData = state.tableData.data.filter(({ id }) => id !== rowId);\r\n      return {\r\n        ...state,\r\n        tableData: {\r\n          columns: state.tableData.columns,\r\n          data: [\r\n            ...newTableData,\r\n          ],\r\n        },\r\n      };\r\n    }\r\n    case 'UPDATE_LAST_WATER_AMOUNT': {\r\n      const { waterAmount, teaLeafId } = action.payload;\r\n      const targetTableData = state.tableData.data.find(({ id }) => id == teaLeafId);\r\n      const newTableData = state.tableData.data.filter(({ id }) => id != teaLeafId);\r\n      return {\r\n        ...state,\r\n        tableData: {\r\n          columns: state.tableData.columns,\r\n          data: [\r\n            ...newTableData,\r\n            {\r\n              ...targetTableData,\r\n              lastWaterAmount: waterAmount,\r\n            },\r\n          ],\r\n        },\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default teaTableReducer;","import styled from \"styled-components\";\r\n\r\nconst StyledSelect = styled.select`\r\n  border: 2px solid;\r\n`;\r\n\r\nconst TeaSelect = ({\r\n  teaList,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <StyledSelect onChange={onChange}>\r\n      {teaList.filter((row) => {\r\n        return row.leafName && row.leafAmount && row.waterAmount;\r\n      }).map((tea) => {\r\n        return <option key={tea.id} value={tea.id}>{tea.leafName}</option>\r\n      })}\r\n    </StyledSelect>\r\n  )\r\n};\r\n\r\nexport default TeaSelect;","import styled from \"styled-components\";\r\n\r\nconst Circle = styled.div`\r\n  width: 24px;\r\n  height: 24px;\r\n  border-radius: 100px;\r\n  border: 1px solid #a0a0a0;\r\n  :hover {\r\n    background: #ff3a00;\r\n    border: 1px solid #ff3a00;\r\n    div {\r\n      color: white;\r\n    }\r\n  }\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Mark = styled.div`\r\n  font-size: 24px;\r\n`;\r\n\r\nconst AddButton = ({\r\n  ...remainProps\r\n}) => {\r\n  return (\r\n    <Circle {...remainProps}>\r\n      <Mark>＋</Mark>\r\n    </Circle>\r\n  )\r\n};\r\n\r\nexport default AddButton;","const LOCALSTORAGE_KEY = 'teaLeafSettings';\r\n\r\nexport const readFromLocalStorage = () => {\r\n  const data = localStorage.getItem(LOCALSTORAGE_KEY);\r\n  return JSON.parse(data);\r\n};\r\n\r\nexport const writeToLocalStorage = (data) => {\r\n  localStorage.setItem(LOCALSTORAGE_KEY, JSON.stringify(data));\r\n};","import './App.css';\nimport Teapot from './components/Teapot';\nimport Slider from './components/Slider';\nimport { useState } from 'react';\nimport { createStore } from 'redux'\nimport styled from 'styled-components';\nimport EditableTable from './components/EditableTable';\nimport teaTableReducer from './reducers/teaTableReducer';\nimport { Provider, useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport TeaSelect from './components/TeaSelect';\nimport AddButton from './components/AddButton';\nimport { readFromLocalStorage, writeToLocalStorage } from './utils/localStorageUtils';\n\nconst Root = styled.div`\n  margin: 8px 16px;\n`;\n\nconst TeapotWrapper = styled.div`\n  display: flex;\n  margin-top: 8px;\n`;\n\nconst TableWrapper = styled.div`\n  max-width: 580px;\n`;\n\nconst StyledAddButton = styled(AddButton)`\n  margin: 0 8px 4px auto;\n`;\n\nconst AmountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst TeaLeafAmount = styled.div`\n  font-weight: bold;\n  font-size 36px;\n  margin-bottom: 8px;\n`;\n\nconst WaterAmount = styled.div`\n  font-weight: bold;\n  font-size 36px;\n  border-top: 4px solid black;\n`;\n\nconst App = () => {\n  const store = createStore(teaTableReducer);\n  return (\n    <Provider store={store}>\n      <Page />\n    </Provider>\n  );\n};\n\nconst Page = () => {\n  const max = 400;\n  const min = 0;\n  const [waterAmount, setWaterAmount] = useState(50);\n  const [teaLeafId, setTeaLeafId] = useState(null);\n  const [teaLeafAmount, setTeaLeafAmount] = useState(0);\n\n  const { tableData } = useSelector((state) => state);\n\n  const teaList = tableData.data.sort((a, b) => a.id - b.id);\n\n  const dispatch = useDispatch();\n\n  const calcTeaLeafAmount = () => {\n    const targetTeaLeaf = tableData.data.find(({ id }) => id == teaLeafId);\n    if (!targetTeaLeaf) {\n      return 0;\n    }\n    return (targetTeaLeaf.leafAmount / targetTeaLeaf.waterAmount) * waterAmount;\n  };\n\n  const addBlankRow = () => {\n    dispatch({\n      type: 'ADD_DATA',\n      payload: {\n        leafName: '',\n        leafAmount: 0,\n        waterAmount: 0,\n      }\n    });\n  };\n\n  const onDeleteRow = (rowId) => {\n    dispatch({\n      type: 'DELETE_DATA',\n      payload: {rowId},\n    });\n  };\n\n  useEffect(() => {\n    setTeaLeafAmount(calcTeaLeafAmount());\n  }, [waterAmount, teaLeafId, tableData]);\n\n  useEffect(() => {\n    if (teaList.length && !teaList.find(({id}) => id == teaLeafId)) {\n      setTeaLeafId(teaList[0].id);\n    } else {\n      if (!teaList.length)\n      setTeaLeafId(null);\n    }\n    if (tableData && tableData.data.length) {\n      writeToLocalStorage(tableData);\n    }\n  }, [tableData]);\n\n  useEffect(() => {\n    if (waterAmount && !isNaN(teaLeafId)) {\n      dispatch({\n        type: 'UPDATE_LAST_WATER_AMOUNT',\n        payload: { waterAmount, teaLeafId }\n      });\n    }\n  }, [waterAmount]);\n\n  useEffect(() => {\n    const target = tableData.data.find(({id}) => id == teaLeafId);\n    if (target && target.lastWaterAmount) {\n      setWaterAmount(target.lastWaterAmount);\n    }\n  }, [teaLeafId]);\n\n  useEffect(() => {\n    const data = readFromLocalStorage();\n    dispatch({\n      type: 'INIT',\n      payload: {\n        columns: [\n          { id: 'leafName', label: '茶葉', align: 'center' },\n          { id: 'leafAmount', label: '茶葉の量 [g]', align: 'right', type: 'number' },\n          { id: 'waterAmount', label: '水の量 [mL]', align: 'right', type: 'number' },\n        ],\n        data: data ? data.data : [],\n      },\n    })\n  }, []);\n\n  return (\n    <Root>\n      <TeaSelect teaList={teaList} onChange={(e) => setTeaLeafId(e.target.value)} />\n      <TeapotWrapper>\n        <Teapot max={max} amount={waterAmount} />\n        <Slider min={min} max={max} value={waterAmount} setValue={(v) => setWaterAmount(v)} />\n        <AmountWrapper>\n          <TeaLeafAmount>{isNaN(teaLeafAmount) || !teaLeafAmount ? ' - ' : Math.round(teaLeafAmount)}g</TeaLeafAmount>\n          <WaterAmount>{waterAmount}mL</WaterAmount>\n        </AmountWrapper>\n      </TeapotWrapper>\n      <TableWrapper>\n        <StyledAddButton onClick={addBlankRow}>a</StyledAddButton>\n        <EditableTable data={tableData} onDelete={onDeleteRow} />\n      </TableWrapper>\n    </Root>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}